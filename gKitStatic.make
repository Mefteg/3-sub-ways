# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = obj/debug/gKitStatic
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/libgKitStatic.a
  DEFINES   += -DGK_OPENGL3 -DDEBUG -DVERBOSE
  INCLUDES  += -I. -IgKit -IgKit/Widgets -Iglew-1.7.0/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -pipe `sdl-config --cflags` -march=native
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -Wl,-rpath,glew-1.7.0/lib -Lglew-1.7.0/lib -lGLEW `sdl-config --libs`
  LIBS      += -lGL -lSDL_image -lSDL_ttf
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/release/gKitStatic
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/libgKitStatic.a
  DEFINES   += -DGK_OPENGL3 -DNDEBUG -DVERBOSE
  INCLUDES  += -I. -IgKit -IgKit/Widgets -Iglew-1.7.0/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -pipe `sdl-config --cflags` -march=native -march=native -mfpmath=sse -msse3
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -Wl,-rpath,glew-1.7.0/lib -Lglew-1.7.0/lib -lGLEW `sdl-config --libs`
  LIBS      += -lGL -lSDL_image -lSDL_ttf
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/utils.o \
	$(OBJDIR)/EffectShaderManager.o \
	$(OBJDIR)/MeshOBJ.o \
	$(OBJDIR)/vertex.o \
	$(OBJDIR)/App.o \
	$(OBJDIR)/Effect.o \
	$(OBJDIR)/shadercc.o \
	$(OBJDIR)/rgbe.o \
	$(OBJDIR)/Mesh.o \
	$(OBJDIR)/halfedge.o \
	$(OBJDIR)/Geometry.o \
	$(OBJDIR)/Transform.o \
	$(OBJDIR)/face.o \
	$(OBJDIR)/TextFile.o \
	$(OBJDIR)/TPTexture.o \
	$(OBJDIR)/TPFramebuffer.o \
	$(OBJDIR)/TPProgramName.o \
	$(OBJDIR)/TPAttributes.o \
	$(OBJDIR)/TPShaderProgram.o \
	$(OBJDIR)/TPFeedback.o \
	$(OBJDIR)/TPTextureUnits.o \
	$(OBJDIR)/GLShaderObject.o \
	$(OBJDIR)/nvWidgets.o \
	$(OBJDIR)/nvGLWidgets.o \
	$(OBJDIR)/nvSdlWidgets.o \
	$(OBJDIR)/nvSdlTextPainter.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking gKitStatic
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning gKitStatic
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/utils.o: gKit/utils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/EffectShaderManager.o: gKit/EffectShaderManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/MeshOBJ.o: gKit/MeshOBJ.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/vertex.o: gKit/vertex.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/App.o: gKit/App.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Effect.o: gKit/Effect.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/shadercc.o: gKit/shadercc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/rgbe.o: gKit/rgbe.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Mesh.o: gKit/Mesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/halfedge.o: gKit/halfedge.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Geometry.o: gKit/Geometry.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Transform.o: gKit/Transform.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/face.o: gKit/face.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TextFile.o: gKit/TextFile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPTexture.o: gKit/GL/TPTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPFramebuffer.o: gKit/GL/TPFramebuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPProgramName.o: gKit/GL/TPProgramName.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPAttributes.o: gKit/GL/TPAttributes.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPShaderProgram.o: gKit/GL/TPShaderProgram.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPFeedback.o: gKit/GL/TPFeedback.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/TPTextureUnits.o: gKit/GL/TPTextureUnits.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/GLShaderObject.o: gKit/GL/GLShaderObject.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/nvWidgets.o: gKit/Widgets/nvwidgets/nvWidgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/nvGLWidgets.o: gKit/Widgets/nvwidgets/nvGLWidgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/nvSdlWidgets.o: gKit/Widgets/nvwidgets/nvSdlWidgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/nvSdlTextPainter.o: gKit/Widgets/nvwidgets/nvSdlTextPainter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
